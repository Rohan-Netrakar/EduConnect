<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Classroom Connect | Join Session</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    :root {
      --primary: #4361ee;
      --primary-light: #4895ef;
      --secondary: #3f37c9;
      --success: #4cc9f0;
      --dark: #1d3557;
      --light: #f8f9fa;
      --gray: #8d99ae;
      --danger: #e63946;
      --success-bg: #e8f5e9;
      --error-bg: #ffebee;
      --radius: 16px;
      --shadow: 0 10px 30px rgba(0,0,0,0.08);
      --transition: all 0.3s ease;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
      color: var(--dark);
      line-height: 1.6;
    }

    .container {
      max-width: 900px;
      width: 100%;
      display: flex;
      background: white;
      border-radius: var(--radius);
      overflow: hidden;
      box-shadow: var(--shadow);
    }

    .visual-section {
      flex: 1;
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
      padding: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      color: white;
      text-align: center;
      position: relative;
      overflow: hidden;
    }

    .visual-section::before {
      content: "";
      position: absolute;
      width: 300px;
      height: 300px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      top: -150px;
      left: -150px;
    }

    .visual-section::after {
      content: "";
      position: absolute;
      width: 200px;
      height: 200px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      bottom: -100px;
      right: -100px;
    }

    .visual-section h2 {
      font-size: 2.2rem;
      margin-bottom: 15px;
      font-weight: 700;
      z-index: 2;
    }

    .visual-section p {
      font-size: 1.1rem;
      opacity: 0.9;
      max-width: 400px;
      margin-bottom: 30px;
      z-index: 2;
    }

    .features {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      z-index: 2;
      margin-top: 30px;
    }

    .feature {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(10px);
      padding: 15px;
      border-radius: 12px;
      width: 150px;
      text-align: center;
    }

    .feature i {
      font-size: 2rem;
      margin-bottom: 10px;
      color: var(--success);
    }

    .feature h3 {
      font-size: 1rem;
      font-weight: 600;
      margin-bottom: 5px;
    }

    .form-section {
      flex: 1;
      padding: 50px 40px;
      display: flex;
      flex-direction: column;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 30px;
    }

    .logo i {
      font-size: 2.5rem;
      color: var(--primary);
    }

    .logo h1 {
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--dark);
    }

    .form-section h3 {
      font-size: 1.5rem;
      margin-bottom: 10px;
      color: var(--dark);
    }

    .form-section p {
      color: var(--gray);
      margin-bottom: 30px;
    }

    #qr-container {
      width: 250px;
      height: 250px;
      margin: 0 auto 30px;
      border: 15px solid white;
      border-radius: 12px;
      box-shadow: var(--shadow);
      overflow: hidden;
      background: white;
    }

    #qr-code {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .input-group {
      position: relative;
      margin-bottom: 25px;
    }

    input {
      width: 100%;
      padding: 16px 20px 16px 50px;
      font-size: 1rem;
      border: 2px solid #e2e8f0;
      border-radius: 12px;
      transition: var(--transition);
      background: #f8fafc;
    }

    input:focus {
      outline: none;
      border-color: var(--primary-light);
      background: white;
      box-shadow: 0 5px 15px rgba(67, 97, 238, 0.1);
    }

    .input-icon {
      position: absolute;
      left: 20px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray);
    }

    button {
      background: linear-gradient(to right, var(--primary), var(--primary-light));
      color: white;
      border: none;
      padding: 16px;
      font-size: 1.1rem;
      font-weight: 600;
      border-radius: 12px;
      cursor: pointer;
      transition: var(--transition);
      box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
    }

    button:hover {
      transform: translateY(-3px);
      box-shadow: 0 7px 20px rgba(67, 97, 238, 0.4);
    }

    button:active {
      transform: translateY(0);
    }

    #status-message {
      margin-top: 20px;
      padding: 18px;
      border-radius: 12px;
      font-size: 0.95rem;
      display: none;
    }

    .success {
      background-color: var(--success-bg);
      color: #2e7d32;
      display: block;
    }

    .error {
      background-color: var(--error-bg);
      color: #c62828;
      display: block;
    }

    .student-id {
      font-weight: 600;
      background: rgba(76, 175, 80, 0.1);
      padding: 5px 10px;
      border-radius: 6px;
      display: inline-block;
      margin-top: 8px;
    }

    @media (max-width: 768px) {
      .container {
        flex-direction: column;
      }
      
      .visual-section {
        padding: 30px 20px;
      }
      
      .features {
        gap: 10px;
      }
      
      .feature {
        width: calc(50% - 20px);
      }
    }

    @media (max-width: 480px) {
      .form-section {
        padding: 30px 20px;
      }
      
      #qr-container {
        width: 200px;
        height: 200px;
      }
      
      .feature {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="visual-section">
      <h2>Enhanced Classroom Engagement</h2>
      <p>Join interactive sessions, participate in real-time, and enhance your learning experience</p>
      
      <div class="features">
        <div class="feature">
          <i class="fas fa-comments"></i>
          <h3>Live Q&A</h3>
        </div>
        <div class="feature">
          <i class="fas fa-poll"></i>
          <h3>Real-time Polls</h3>
        </div>
        <div class="feature">
          <i class="fas fa-tasks"></i>
          <h3>Interactive Quizzes</h3>
        </div>
        <div class="feature">
          <i class="fas fa-chart-line"></i>
          <h3>Progress Tracking</h3>
        </div>
      </div>
    </div>
    
    <div class="form-section">
      <div class="logo">
        <i class="fas fa-chalkboard-teacher"></i>
        <h1>Classroom Connect</h1>
      </div>
      
      <h3>Join Classroom Session</h3>
      <p>Scan the QR code or enter your details below to join the class</p>
      
      <div id="qr-container">
        <img id="qr-code" src="" alt="Classroom QR Code">
      </div>
      
      <div id="student-info">
        <form id="registration-form">
          <div class="input-group">
            <i class="fas fa-user input-icon"></i>
            <input type="text" id="student-name" placeholder="Enter your full name" required>
          </div>
          <button type="submit">
            <i class="fas fa-sign-in-alt"></i>
            Join Classroom
          </button>
        </form>
      </div>
      
      <div id="status-message"></div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const registrationForm = document.getElementById('registration-form');
      const statusMessage = document.getElementById('status-message');
      const qrCodeImg = document.getElementById('qr-code');
      // Get class ID from URL
      const urlParams = new URLSearchParams(window.location.search);
      const classId = urlParams.get('classId');
      
      // Display QR code for class
      if (classId) {
      
        qrCodeImg.src = `/qr?classId=${classId}`;
      } else {
        statusMessage.textContent = 'Error: Missing class ID in URL parameters';
        statusMessage.className = 'error';
      }
      
      registrationForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const studentName = document.getElementById('student-name').value.trim();
        
        if (!classId) {
          statusMessage.textContent = 'Error: Class ID not found';
          statusMessage.className = 'error';
          return;
        }
        
        if (!studentName) {
          statusMessage.textContent = 'Please enter your name';
          statusMessage.className = 'error';
          return;
        }
        
        try {
            const response = await fetch('/join-class', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
              classId,
              studentName 
            })
          });
          const result = await response.json();

            if (result.success) {
              statusMessage.innerHTML = `
                <p><i class="fas fa-check-circle"></i> Successfully joined <strong>${result.className}</strong>!</p>
                <p>Your student ID: <span class="student-id">${result.studentId}</span></p>
                <p><i class="fas fa-sync fa-spin"></i> Redirecting to classroom interface...</p>
              `;
              statusMessage.className = 'success';
              
              // Store student name for client
              localStorage.setItem('studentName', studentName);
              
              // Redirect to student client
              setTimeout(() => {
                window.location.href = result.clientUrl;
              }, 2500);
            } else {
              statusMessage.textContent = 'Error: ' + (result.message || 'Failed to join class');
              statusMessage.className = 'error';
            }
        } catch (error) {
          statusMessage.textContent = 'Connection error: ' + error.message;
          statusMessage.className = 'error';
        }
      });
    });
  </script>
</body>
</html>